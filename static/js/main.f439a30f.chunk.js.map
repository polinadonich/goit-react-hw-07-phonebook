{"version":3,"sources":["components/Phonebook.module.css","components/ContactElement/ContactElement.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/ContactElement/ContactElement.js","redux/actions.js","redux/operations.js","redux/selectors.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","App.js","redux/reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","ContactElement","id","name","number","deleteContact","className","s","button","type","onClick","prototype","PropTypes","string","isRequired","func","checkPropTypes","addContactsRequest","createAction","addContactsSuccsess","addContactsError","deleteContactsRequest","deleteContactsSuccsess","deleteContactsError","fetchContactsRequest","fetchContactsSuccsess","fetchContactsError","changeFilter","axios","defaults","baseURL","fetchContacts","dispatch","a","get","data","addContact","contact","post","contactId","delete","error","getContacts","state","contacts","items","getFilter","filter","getVisibleContacts","normalizedFilter","toLocaleLowerCase","includes","ContactList","useSelector","contactsSelectors","useDispatch","contactsOperations","useEffect","list","map","item","ContactForm","useState","setName","setNumber","handleChange","e","currentTarget","value","onSubmit","preventDefault","find","alert","lableContact","inputContact","onChange","pattern","title","required","arrayOf","shape","Filter","findLable","App","container","phonebookContainer","contactsContainer","createReducer","payload","initialState","combineReducers","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","persistor","persistStore","ReactDOM","render","loading","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f439a30f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Phonebook_container__1ssAr\",\"phonebookContainer\":\"Phonebook_phonebookContainer__1-Era\",\"contactsContainer\":\"Phonebook_contactsContainer__NxkTP\",\"list\":\"Phonebook_list__ktLEu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"number\":\"ContactElement_number__23XhM\",\"button\":\"ContactElement_button__1fX_I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__1XkZq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"findLable\":\"Filter_findLable__28gbr\",\"find\":\"Filter_find__1IMSD\"};","import s from \"./ContactElement.module.css\";\nimport PropTypes from \"prop-types\";\n\nfunction ContactElement({ id, name, number, deleteContact }) {\n  return (\n    <p>\n      <span>{name}:</span>\n      <span className={s.number}>{number}</span>\n      <button\n        className={s.button}\n        type=\"button\"\n        onClick={() => deleteContact(id)}\n      >\n        Delete\n      </button>\n    </p>\n  );\n}\n\nContactElement.prototype = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.number.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nPropTypes.checkPropTypes(ContactElement);\n\nexport default ContactElement;\n","/* eslint-disable import/no-anonymous-default-export */\nimport { createAction } from \"@reduxjs/toolkit\";\n// import { v4 as uuidv4 } from \"uuid\";\n\nexport const addContactsRequest = createAction(\"contacts/addContactsRequest\");\nexport const addContactsSuccsess = createAction(\"contacts/addContactsSuccsess\");\nexport const addContactsError = createAction(\"contacts/addContactsError\");\n\nexport const deleteContactsRequest = createAction(\n  \"contacts/deleteContactsRequest\"\n);\nexport const deleteContactsSuccsess = createAction(\n  \"contacts/deleteContactsSuccsess\"\n);\nexport const deleteContactsError = createAction(\"contacts/deleteContactsError\");\n\nexport const fetchContactsRequest = createAction(\n  \"contacts/fetchContactsRequest\"\n);\nexport const fetchContactsSuccsess = createAction(\n  \"contacts/fetchContactsSuccsess\"\n);\nexport const fetchContactsError = createAction(\"contacts/fetchContactsError\");\n\nexport const changeFilter = createAction(\"contacts/changeFilter\");\n\n\n\n\n\n// const addContact = createAction(\"contact/add\", (name, number) => ({\n//   payload: {\n//     id: uuidv4(),\n//     name,\n//     number,\n//   },\n// }));\n\n// const deleteContact = createAction(\"contact/delete\");\n\n// const changeFilter = createAction(\"contact/changeFilter\");\n\n// export default { addContact, deleteContact, changeFilter };\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport axios from \"axios\";\r\nimport {\r\n  addContactsRequest,\r\n  addContactsSuccsess,\r\n  addContactsError,\r\n  deleteContactsRequest,\r\n  deleteContactsSuccsess,\r\n  deleteContactsError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccsess,\r\n  fetchContactsError,\r\n} from \"./actions\";\r\n\r\naxios.defaults.baseURL = \"https://61b6e883c95dd70017d410c9.mockapi.io/\";\r\n\r\nexport const fetchContacts = () => async (dispatch) => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get(\"/contacts\");\r\n    dispatch(fetchContactsSuccsess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactsError(error));\r\n  }\r\n};\r\n\r\nexport const addContact = (name, number) => async (dispatch) => {\r\n  const contact = {\r\n    name,\r\n    number,\r\n  };\r\n\r\n  dispatch(addContactsRequest());\r\n\r\n  try {\r\n    const { data } = await axios.post(\"/contacts\", contact);\r\n    dispatch(addContactsSuccsess(data));\r\n  } catch (error) {\r\n    dispatch(addContactsError(error));\r\n  }\r\n\r\n  //   axios\r\n  //     .post(\"/contacts\", contact)\r\n  //     .then(({ data }) => dispatch(addContactsSuccsess(data)))\r\n  //     .catch((error) => dispatch(addContactsError(error)));\r\n};\r\n\r\nexport const deleteContact = (contactId) => async (dispatch) => {\r\n  dispatch(deleteContactsRequest());\r\n\r\n  try {\r\n    axios.delete(`/contacts/${contactId}`);\r\n    dispatch(deleteContactsSuccsess(contactId));\r\n  } catch (error) {\r\n    dispatch(deleteContactsError(error));\r\n  }\r\n};\r\n\r\n// export default { addContact, fetchContacts, deleteContact };","export const getContacts = (state) => state.contacts.items;\nexport const getFilter = (state) => state.contacts.filter;\n\nexport const getVisibleContacts = (state) => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n  const normalizedFilter = filter.toLocaleLowerCase();\n\n  return contacts.filter((contact) =>\n    contact.name.toLocaleLowerCase().includes(normalizedFilter)\n  );\n};\n","import { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport ContactElement from \"../ContactElement\";\nimport s from \"./ContactList.module.css\";\n// import actions from \"../../redux/actions\";\n// import { getVisibleContacts } from \"../../redux/selectors\";\nimport { contactsOperations, contactsSelectors } from \"../../redux\";\n\nfunction ContactList() {\n  const contacts = useSelector(contactsSelectors.getVisibleContacts);\n  const dispatch = useDispatch();\n  const deleteContact = (id) => dispatch(contactsOperations.deleteContact(id));\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={s.item}>\n          <ContactElement\n            id={id}\n            name={name}\n            number={number}\n            deleteContact={deleteContact}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default ContactList;\n\nContactList.prototype = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.number.isRequired,\n\n  deleteContact: PropTypes.func.isRequired,\n};\n\nPropTypes.checkPropTypes(ContactList);","import { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport s from \"./ContactForm.module.css\";\nimport PropTypes from \"prop-types\";\n// import actions from \"../../redux/actions\";\n// import { getContacts } from \"../../redux/selectors\";\nimport { contactsOperations, contactsSelectors } from \"../../redux\";\n\nfunction ContactForm() {\n  const contacts = useSelector(contactsSelectors.getContacts);\n  const dispatch = useDispatch();\n  const addContact = (name, number) =>\n    dispatch(contactsOperations.addContact(name, number));\n\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handleChange = (e) => {\n    if (e.currentTarget.name === \"name\") {\n      setName(e.currentTarget.value);\n    }\n\n    if (e.currentTarget.name === \"number\") {\n      setNumber(e.currentTarget.value);\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const isContactsIncludes = contacts.find(\n      (contact) => contact.name === name\n    );\n\n    if (isContactsIncludes) {\n      return alert(`${name} is alredy in contacts`);\n    } else {\n      addContact(name, number);\n      setName(\"\");\n      setNumber(\"\");\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label className={s.lableContact}>\n        Name\n        <input\n          className={s.inputContact}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n\n      <label className={s.lableContact}>\n        Number\n        <input\n          className={s.inputContact}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n\n      <button className={s.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n\nContactForm.prototype = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.number.isRequired,\n    }).isRequired\n  ),\n  addContact: PropTypes.func.isRequired,\n};","// import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport s from \"./Filter.module.css\";\n\n// import { getFilter } from \"../../redux/selectors\";\nimport { changeFilter } from \"../../redux/actions\";\nimport { contactsSelectors } from \"../../redux\";\n\n\nfunction Filter() {\n  const value = useSelector(contactsSelectors.getFilter);\n  const dispatch = useDispatch();\n  const onChange = (e) => dispatch(changeFilter(e.currentTarget.value));\n\n  return (\n    <label className={s.findLable}>\n      Find contacts by name\n      <input\n        className={s.find}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      ></input>\n    </label>\n  );\n}\n\nexport default Filter;\n\nFilter.prototype = {\n  filter: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nPropTypes.checkPropTypes(Filter);\n","import ContactList from \"./components/ContactList\";\nimport ContactForm from \"./components/ContactForm\";\nimport Filter from \"./components/Filter\";\nimport s from \"./components/Phonebook.module.css\";\n\nfunction App() {\n  return (\n    <div className={s.container}>\n      <div className={s.phonebookContainer}>\n        <h1>Phonebook</h1>\n        <ContactForm />\n      </div>\n\n      <div className={s.contactsContainer}>\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport { combineReducers } from \"redux\";\nimport {\n  addContactsSuccsess,\n  deleteContactsSuccsess,\n  fetchContactsSuccsess,\n  changeFilter,\n} from \"./actions\";\n\nconst items = createReducer([], {\n  [fetchContactsSuccsess]: (state, { payload }) => payload,\n  [addContactsSuccsess]: (state, { payload }) => [...state, payload],\n  [deleteContactsSuccsess]: (state, { payload }) =>\n    state.filter((contact) => contact.id !== payload),\n});\n\nconst filter = createReducer(\"\", {\n  [changeFilter]: (state, { payload }) => payload,\n});\n\nconst initialState = combineReducers({\n  items,\n  filter,\n});\n\nexport default initialState;\n","/* eslint-disable import/no-anonymous-default-export */\n// import { createStore, combineReducers } from \"redux\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport logger from \"redux-logger\";\nimport contacts from \"./reducer\";\n\n\n// const myMiddleWare = (store) => (next) => (action) => {\n//   console.log(\"\", action);\n\n//   next(action);\n// };\n// const middleware = [\n//   ...getDefaultMiddleware({\n//     serializableCheck: {\n//       ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n//     },\n//   }),\n//   myMiddleWare,\n//   logger,\n// ];\n\nconst contactsPersistConfig = {\n  key: \"contacts\",\n  storage,\n  blacklist: [\"filter\"],\n};\n\n// const store = configureStore({\n//   reducer: {\n//     contacts: contacts,\n//   },\n//   middleware,\n\n//   devTools: process.env.NODE_ENV === \"development\",\n// });\n\n\n// export default store;\n\nconst store = configureStore({\n  reducer: {\n  contacts: persistReducer(contactsPersistConfig, contacts)\n},\n  devTools: process.env.NODE_ENV === \"development\",\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }).concat(logger)\n});\n\nconst persistor = persistStore(store);\n\nexport { store, persistor };","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport {store, persistor} from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null}\n      persistor={persistor}\n    >\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lableContact\":\"ContactForm_lableContact__-HIT8\",\"inputContact\":\"ContactForm_inputContact__3_Tq5\",\"button\":\"ContactForm_button__2QBR4\"};"],"sourceRoot":""}